#!/bin/bash

function query_db() {
	query=$1
	extra_switches=$2
	echo "$(sudo -u postgres psql foswiki_users $2 -c "$query")"
}

searchterm=$1
if [[ $searchterm == "-h" ]]; then
	echo ""\
"This script checks whether a local connection to the unified auth database
can be established and allows you to make simple queries for users and groups.
To do this it connects to the foswiki_users database with the postgres user
via the psql command.

If you run the script without any parameters it will just print an overview of
how many users and groups are stored in the database.

If you run the script with a parameter (except '-h') it will use that parameter to
search for users and groups. For users it will search in the users display name and wiki name,
for groups it will just search in the groups name"
exit 0
else
	echo "To get additional information on what this script does and how it works"\
		 "run it with '-h'"
fi

if ! id postgres >/dev/null 2>&1; then
	echo "Error: The postgres user does not exist." \
		 "Please check whether postgresql is correctly installed."
	exit 1
fi

if ! sudo -u postgres psql foswiki_users -c '\q' >/dev/null 2>&1; then
   	echo "Error: Cannot connect to the foswiki_users database." \
   		 "Please check whether the database exists and whether correct permissions are set."
   	exit 1
fi


if [[ -z "$searchterm" ]]; then
	total_user_count=$(query_db 'select count(*) from users;' -t)
	total_group_count=$(query_db 'select count(*) from groups;' -t)
	ldap_users=$(query_db 'select count(*) from users_ldap;' -t)

	echo -e ""\
"---Users---
Total user count:             $total_user_count
Users imported from LDAP:     $ldap_users

---Groups---
Total group count:            $total_group_count"

else
	user_query="select display_name,wiki_name,cuid from users where
	            lower(display_name) ~ lower('$searchterm') or
		        lower(wiki_name) ~ lower('$searchterm');"
	user_result=$(query_db "$user_query")

	group_query="select name,cuid from groups
			     where lower(name) ~ lower('$searchterm')"
	group_result=$(query_db "$group_query")

	echo -e ""\
"---User search results---
$user_result

---Group search results---
$group_result"
fi
exit 0